25th July 14:00
Give That Thing A Name: Label/Property/Concept Hierarchy Inference

Overall Structure: 

1. General & Intro:
    - Prog. Language: Python as most Clustering Algorithms are implemented in Python
    - [ ] Make code modular and functional to execute different varieties of the pipeline

2. Data: Yelp and Synthetic 
    - [ ] Port from java to python
    - [ ] Create Tree from whats generated and hand-crafted one for Yelp data set

3. Preprocessing: Binary Count Vectorization, SVD/PCA/ICA or tSNE/UMAP/MDS. 
    - [ ] Try Word2Vec instead of Vectorization and SVD/PCA/ICA/tSNE/UMAP/MDS combination

4. Clustering:
    1. General Clustering: (sklearn, pyclustering)
        - [ ] Elbow or sth.
        - [ ] KMeans, AffinityProp, MeanShift, Spectral, Optics, Birch Gaussian
    2. Hierarcical Clustering
        - [ ] Single, Average, Complete, Ward, Robust Single, maybe divisive
    3. End-to-End Approaches
        - [ ] HDBScan (hdbscan package)
        - [ ] Conceptual Clustering (concept_formation package)

5. Evaluation:
        - [ ] First Phase: Shilouette Coef., Adjusted Rand Index, MI based scores, V-meassure, FMI, CHI, DBI
        - [ ] Second Phase: Tree Edit Distance & KFold Cross Validation
            Cross validation:
            Take 90% dataset & create hierachy
            take 10% dataset & validate hierarchy

6. Qestion that Project should answer:
    1. Find label hierarchies
    2. Extract only robust subhierarchies
    3. How distant are two instances
    4. Deal with noise
    5. How can we make such an existing algorithm graph aware: By considering the structure of a graph (in the clustering) regain deleted labels
        - for each node how many edges of each type: Introduce new properties with graphy traits
        - Neighbours, types of neighbours, type of relationships, cumulative relationship, 
    6. How much do we need to sample to get a correct hierarchy?
 
Project: Ignore the graph
Belivable results of how good the results are ignoring the graph structure
Thesis: reintroduce graph structure => algos more robust
