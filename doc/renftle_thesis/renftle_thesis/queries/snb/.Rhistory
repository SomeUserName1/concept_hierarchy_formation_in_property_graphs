trans_new(name = 'asinh', transform = asinh,
inverse = sinh, breaks = asinh_breaks)
}
diffs = merge(sizes, estimations, by="QueryId") %>% select(QueryId, Optimizer, EstSize, ResultSize) %>%
mutate(AbsDiff = abs(ResultSize - EstSize)) %>% distinct()
absErrorsPlot = ggplot(diffs,
aes(x = factor(QueryId), y = AbsDiff, fill=Optimizer)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(trans="asinh", breaks = c(0, 1E1, 1E2, 1E3, 1E4, 1E5, 10E6, 10E7, 10E8, 10E9, 1E10, 1E11))
library(cocor)
t = data.frame(diffs %>% group_by(QueryId) %>% mutate(EstNeo4j = EstSize[1], EstCascades = EstSize[2]) %>% distinct(QueryId, ResultSize, EstNeo4j, EstCascades))
cocor(~ ResultSize + EstNeo4j | ResultSize + EstCascades, t, alternative = "less", conf.level = 0.99)
neo4jDiffs = diffs %>% filter(Optimizer == "Neo4j")
neo4jCorPlot = ggplot(neo4jDiffs, aes(x = ResultSize, y = EstSize, color=Optimizer)) + geom_point() +
geom_smooth(method = lm, formula = y ~ x) +
geom_line(aes(x = ResultSize, y = ResultSize, color="Perfect optimizer"))
cascadesDiffs = diffs %>% filter(Optimizer == "Cascades")
cascadesCorPlot = ggplot(cascadesDiffs, aes(x = ResultSize, y = EstSize, color=Optimizer)) + geom_point() +
geom_smooth(method = lm, formula = y ~ x) +
geom_line(aes(x = ResultSize, y = ResultSize, color="Perfect optimizer"))
absDiff = diffs %>% group_by(QueryId) %>% mutate(OptimizerDiff = AbsDiff[1] - AbsDiff[2]) %>%
select(QueryId, OptimizerDiff) %>% distinct(QueryId, .keep_all=TRUE)
absDiffPlot = ggplot(absDiff, aes(x = factor(QueryId), OptimizerDiff)) +
geom_bar(stat="identity", position = "dodge") +
scale_y_continuous(trans = "asinh", breaks = c(0, 1E1, 1E2, 1E3, 1E4, 1E5, 10E6, 10E7, 10E8, 10E9, 1E10, 1E11))
err99 = function(x) {
return(qt(0.99, df = length(x) - 1) * sd(x) / sqrt(length(x)))
}
conf = absDiff %>% group_by() %>% summarise(mean=mean(OptimizerDiff), err=err99(OptimizerDiff))
conf %>% mutate(low = mean - err, high = mean + err)
relDiff = diffs %>% filter(ResultSize != 0) %>%
group_by(QueryId) %>%
mutate(RelOptimizerDiff = (AbsDiff[1] - AbsDiff[2]) / ResultSize) %>%
select(QueryId, RelOptimizerDiff) %>% distinct(QueryId, .keep_all=TRUE)
relDiffPlot = ggplot(relDiff, aes(x = factor(QueryId), y = RelOptimizerDiff)) +
geom_bar(stat="identity", position = "dodge") +
scale_y_continuous(trans = "asinh", breaks = c(-1, 0, 1, 2, 5, 15, 50, 200, 1000))
conf = relDiff %>% group_by() %>% summarise(mean=mean(OptimizerDiff), err=err99(OptimizerDiff))
conf = relDiff %>% group_by() %>% summarise(mean=mean(OptimizerDiff), err=err99(RelOptimizerDiff))
conf = relDiff %>% group_by() %>% summarise(mean=mean(RelOptimizerDiff), err=err99(RelOptimizerDiff))
conf %>% mutate(low = mean - err, high = mean + err)
knitr::opts_chunk$set(echo = TRUE)
library(fitdistrplus)
plot(fitdist(absDiff, "norm"))
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(dplyr)
library(scales)
queries = read.csv("queries.csv", sep = "|")
kable(queries, caption="Query catalog for the SNB")
sizes = read.csv("sizes.csv", sep = "|") %>% select(QueryId, ResultSize)
estimations = read.csv("estimations.csv", sep = "|")
library(ggplot2)
asinh_breaks <- function(x) {
br <- function(r) {
lmin <- round(log10(r[1]))
lmax <- round(log10(r[2]))
lbreaks <- seq(lmin, lmax, by = 1)
breaks <- 10 ^ lbreaks
}
p.rng <- range(x[x > 0], na.rm = TRUE)
breaks <- br(p.rng)
if (min(x) <= 0) {breaks <- c(0, breaks)}
if (sum(x < 0) > 1) { #more negative values that expected from expanding scale that includes zero
n.rng <- -range(x[x < 0], na.rm = TRUE)
breaks <- c(breaks, -br(n.rng))
}
return(sort(breaks))
}
asinh_trans <- function(){
trans_new(name = 'asinh', transform = asinh,
inverse = sinh, breaks = asinh_breaks)
}
diffs = merge(sizes, estimations, by="QueryId") %>% select(QueryId, Optimizer, EstSize, ResultSize) %>%
mutate(AbsDiff = abs(ResultSize - EstSize)) %>% distinct()
absErrorsPlot = ggplot(diffs,
aes(x = factor(QueryId), y = AbsDiff, fill=Optimizer)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(trans="asinh", breaks = c(0, 1E1, 1E2, 1E3, 1E4, 1E5, 10E6, 10E7, 10E8, 10E9, 1E10, 1E11))
library(cocor)
t = data.frame(diffs %>% group_by(QueryId) %>% mutate(EstNeo4j = EstSize[1], EstCascades = EstSize[2]) %>% distinct(QueryId, ResultSize, EstNeo4j, EstCascades))
cocor(~ ResultSize + EstNeo4j | ResultSize + EstCascades, t, alternative = "less", conf.level = 0.99)
neo4jDiffs = diffs %>% filter(Optimizer == "Neo4j")
neo4jCorPlot = ggplot(neo4jDiffs, aes(x = ResultSize, y = EstSize, color=Optimizer)) + geom_point() +
geom_smooth(method = lm, formula = y ~ x) +
geom_line(aes(x = ResultSize, y = ResultSize, color="Perfect optimizer"))
cascadesDiffs = diffs %>% filter(Optimizer == "Cascades")
cascadesCorPlot = ggplot(cascadesDiffs, aes(x = ResultSize, y = EstSize, color=Optimizer)) + geom_point() +
geom_smooth(method = lm, formula = y ~ x) +
geom_line(aes(x = ResultSize, y = ResultSize, color="Perfect optimizer"))
absDiff = diffs %>% group_by(QueryId) %>% mutate(OptimizerDiff = AbsDiff[1] - AbsDiff[2]) %>%
select(QueryId, OptimizerDiff) %>% distinct(QueryId, .keep_all=TRUE)
absDiffPlot = ggplot(absDiff, aes(x = factor(QueryId), OptimizerDiff)) +
geom_bar(stat="identity", position = "dodge") +
scale_y_continuous(trans = "asinh", breaks = c(0, 1E1, 1E2, 1E3, 1E4, 1E5, 10E6, 10E7, 10E8, 10E9, 1E10, 1E11))
library(fitdistrplus)
plot(fitdist(absDiff, "norm"))
absdiff
absDiff
library(fitdistrplus)
plot(fitdist(absDiff$OptimizerDiff, "norm"))
absDiffPlot
hist(absDiff)
hist(absDiff$OptimizerDiff)
hist(absDiff$OptimizerDiff, breaks=1E3)
ggplot(data=absDiff$OptimizerDiff, aes(absDiff$OptimizerDiff)) + geom_histogram()
ggplot(data=absDiff, aes(absDiff$OptimizerDiff)) + geom_histogram()
density(absDiff$OptimizerDiff)
plot(density(absDiff$OptimizerDiff))
hist(absDiff$OptimizerDiff, freq = FALSE)
ggplot(data=absDiff, aes(absDiff$OptimizerDiff)) + geom_histogram()
ggplot(data=absDiff, aes(absDiff$OptimizerDiff)) + geom_histogram(binwidth = 1E3)
ggplot(data=absDiff, aes(absDiff$OptimizerDiff)) + geom_histogram(binwidth = 1E6)
ggplot(data=absDiff, aes(absDiff$OptimizerDiff)) + geom_histogram(bins=10)
ggplot(data=absDiff, aes(absDiff$OptimizerDiff)) + geom_histogram(bins=4)
plot(absDiff$OptimizerDiff)
plot(density(absDiff$OptimizerDiff))
plot(absDiff$OptimizerDiff)
hist(absDiff$OptimizerDiff, xlim = c(0, 1E6))
ggplot(data=absDiff, aes(OptimizerDiff)) + geom_histogram(bins=4)
ggplot(data=absDiff %>% filter(OptimizerDiff <= 1E6), aes(OptimizerDiff)) + geom_histogram(bins=4)
ggplot(data=absDiff %>% filter(OptimizerDiff <= 1E6), aes(OptimizerDiff)) + geom_histogram(bins=6)
ggplot(data=absDiff %>% filter(OptimizerDiff <= 1E6), aes(OptimizerDiff)) + geom_histogram(bins=7)
ggplot(data=absDiff %>% filter(OptimizerDiff <= 1E6), aes(OptimizerDiff)) + geom_histogram(bins=10)
ggplot(data=relDiff, aes(OptimizerDiff)) + geom_histogram(bins=10)
relDiff = diffs %>% filter(ResultSize != 0) %>%
group_by(QueryId) %>%
mutate(RelOptimizerDiff = (AbsDiff[1] - AbsDiff[2]) / ResultSize) %>%
select(QueryId, RelOptimizerDiff) %>% distinct(QueryId, .keep_all=TRUE)
relDiffPlot = ggplot(relDiff, aes(x = factor(QueryId), y = RelOptimizerDiff)) +
geom_bar(stat="identity", position = "dodge") +
scale_y_continuous(trans = "asinh", breaks = c(-1, 0, 1, 2, 5, 15, 50, 200, 1000))
ggplot(data=relDiff, aes(OptimizerDiff)) + geom_histogram(bins=10)
ggplot(data=relDiff, aes(RelOptimizerDiff)) + geom_histogram(bins=10)
anyDuplicated()
anyDuplicated
any(relDiff$RelOptimizerDiff < 0)
relDiff$RelOptimizerDiff < 0
relDiff[relDiff$RelOptimizerDiff < 0]
relDiff[relDiff$RelOptimizerDiff < 0,]
plot(density(relDiff$RelOptimizerDiff))
conf = relDiff %>% group_by() %>% summarise(mean=mean(RelOptimizerDiff), err=err99(RelOptimizerDiff))
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(dplyr)
library(scales)
queries = read.csv("queries.csv", sep = "|")
kable(queries, caption="Query catalog for the SNB")
sizes = read.csv("sizes.csv", sep = "|") %>% select(QueryId, ResultSize)
estimations = read.csv("estimations.csv", sep = "|")
library(ggplot2)
asinh_breaks <- function(x) {
br <- function(r) {
lmin <- round(log10(r[1]))
lmax <- round(log10(r[2]))
lbreaks <- seq(lmin, lmax, by = 1)
breaks <- 10 ^ lbreaks
}
p.rng <- range(x[x > 0], na.rm = TRUE)
breaks <- br(p.rng)
if (min(x) <= 0) {breaks <- c(0, breaks)}
if (sum(x < 0) > 1) { #more negative values that expected from expanding scale that includes zero
n.rng <- -range(x[x < 0], na.rm = TRUE)
breaks <- c(breaks, -br(n.rng))
}
return(sort(breaks))
}
asinh_trans <- function(){
trans_new(name = 'asinh', transform = asinh,
inverse = sinh, breaks = asinh_breaks)
}
diffs = merge(sizes, estimations, by="QueryId") %>% select(QueryId, Optimizer, EstSize, ResultSize) %>%
mutate(AbsDiff = abs(ResultSize - EstSize)) %>% distinct()
absErrorsPlot = ggplot(diffs,
aes(x = factor(QueryId), y = AbsDiff, fill=Optimizer)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(trans="asinh", breaks = c(0, 1E1, 1E2, 1E3, 1E4, 1E5, 10E6, 10E7, 10E8, 10E9, 1E10, 1E11))
library(cocor)
t = data.frame(diffs %>% group_by(QueryId) %>% mutate(EstNeo4j = EstSize[1], EstCascades = EstSize[2]) %>% distinct(QueryId, ResultSize, EstNeo4j, EstCascades))
cocor(~ ResultSize + EstNeo4j | ResultSize + EstCascades, t, alternative = "less", conf.level = 0.99)
neo4jDiffs = diffs %>% filter(Optimizer == "Neo4j")
neo4jCorPlot = ggplot(neo4jDiffs, aes(x = ResultSize, y = EstSize, color=Optimizer)) + geom_point() +
geom_smooth(method = lm, formula = y ~ x) +
geom_line(aes(x = ResultSize, y = ResultSize, color="Perfect optimizer"))
cascadesDiffs = diffs %>% filter(Optimizer == "Cascades")
cascadesCorPlot = ggplot(cascadesDiffs, aes(x = ResultSize, y = EstSize, color=Optimizer)) + geom_point() +
geom_smooth(method = lm, formula = y ~ x) +
geom_line(aes(x = ResultSize, y = ResultSize, color="Perfect optimizer"))
absDiff = diffs %>% group_by(QueryId) %>% mutate(OptimizerDiff = AbsDiff[1] - AbsDiff[2]) %>%
select(QueryId, OptimizerDiff) %>% distinct(QueryId, .keep_all=TRUE)
absDiffPlot = ggplot(absDiff, aes(x = factor(QueryId), OptimizerDiff)) +
geom_bar(stat="identity", position = "dodge") +
scale_y_continuous(trans = "asinh", breaks = c(0, 1E1, 1E2, 1E3, 1E4, 1E5, 10E6, 10E7, 10E8, 10E9, 1E10, 1E11))
ggplot(data=absDiff, aes(absDiff$OptimizerDiff)) + geom_histogram()
err99 = function(x) {
return(qt(0.99, df = length(x) - 1) * sd(x) / sqrt(length(x)))
}
conf = absDiff %>% group_by() %>% summarise(mean=mean(OptimizerDiff), err=err99(OptimizerDiff))
conf %>% mutate(low = mean - err, high = mean + err)
relDiff = diffs %>% filter(ResultSize != 0) %>%
group_by(QueryId) %>%
mutate(RelOptimizerDiff = (AbsDiff[1] - AbsDiff[2]) / ResultSize) %>%
select(QueryId, RelOptimizerDiff) %>% distinct(QueryId, .keep_all=TRUE)
relDiffPlot = ggplot(relDiff, aes(x = factor(QueryId), y = RelOptimizerDiff)) +
geom_bar(stat="identity", position = "dodge") +
scale_y_continuous(trans = "asinh", breaks = c(-1, 0, 1, 2, 5, 15, 50, 200, 1000))
conf = relDiff %>% group_by() %>% summarise(mean=mean(RelOptimizerDiff), err=err99(RelOptimizerDiff))
conf %>% mutate(low = mean - err, high = mean + err)
relDiff = diffs %>% filter(ResultSize != 0) %>%
group_by(QueryId) %>%
mutate(RelOptimizerDiff = (AbsDiff[1] - AbsDiff[2]) / ResultSize) %>%
select(QueryId, RelOptimizerDiff) %>% distinct(QueryId, .keep_all=TRUE)
relDiffPlot = ggplot(relDiff, aes(x = factor(QueryId), y = RelOptimizerDiff)) +
geom_bar(stat="identity", position = "dodge") +
scale_y_continuous(trans = "asinh", breaks = c(-1, 0, 1, 2, 5, 15, 50, 200, 1000))
relDiffPlot
relDiff = diffs %>% filter(ResultSize != 0) %>%
group_by(QueryId) %>%
mutate(RelOptimizerDiff = (AbsDiff[1] - AbsDiff[2]) / ResultSize) %>%
select(QueryId, RelOptimizerDiff) %>% distinct(QueryId, .keep_all=TRUE)
relDiffPlot = ggplot(relDiff, aes(x = factor(QueryId), y = RelOptimizerDiff)) +
geom_bar(stat="identity", position = "dodge")
relDiffPlot
plot(density(relDiff$RelOptimizerDiff))
sd(relDiff$RelOptimizerDiff)
sd(absDiff$OptimizerDiff)
absDiff = diffs %>% group_by(QueryId) %>% mutate(OptimizerDiff = AbsDiff[1] - AbsDiff[2]) %>%
select(QueryId, OptimizerDiff) %>% distinct(QueryId, .keep_all=TRUE)
absDiffPlot = ggplot(absDiff, aes(x = factor(QueryId), OptimizerDiff)) +
geom_bar(stat="identity", position = "dodge") +
scale_y_continuous(trans = "asinh", breaks = c(0, 1E1, 1E2, 1E3, 1E4, 1E5, 10E6, 10E7, 10E8, 10E9, 1E10, 1E11))
absDiffPlot
mean(absDiff$OptimizerDiff)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(dplyr)
library(scales)
queries = read.csv("queries.csv", sep = "|")
kable(queries, caption="Query catalog for the SNB")
sizes = read.csv("sizes.csv", sep = "|") %>% select(QueryId, ResultSize)
estimations = read.csv("estimations.csv", sep = "|")
library(ggplot2)
asinh_breaks <- function(x) {
br <- function(r) {
lmin <- round(log10(r[1]))
lmax <- round(log10(r[2]))
lbreaks <- seq(lmin, lmax, by = 1)
breaks <- 10 ^ lbreaks
}
p.rng <- range(x[x > 0], na.rm = TRUE)
breaks <- br(p.rng)
if (min(x) <= 0) {breaks <- c(0, breaks)}
if (sum(x < 0) > 1) { #more negative values that expected from expanding scale that includes zero
n.rng <- -range(x[x < 0], na.rm = TRUE)
breaks <- c(breaks, -br(n.rng))
}
return(sort(breaks))
}
asinh_trans <- function(){
trans_new(name = 'asinh', transform = asinh,
inverse = sinh, breaks = asinh_breaks)
}
diffs = merge(sizes, estimations, by="QueryId") %>% select(QueryId, Optimizer, EstSize, ResultSize) %>%
mutate(AbsError = abs(ResultSize - EstSize)) %>% distinct()
absErrorsPlot = ggplot(diffs,
aes(x = factor(QueryId), y = AbsError, fill=Optimizer)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(trans="asinh", breaks = c(0, 1E1, 1E2, 1E3, 1E4, 1E5, 10E6, 10E7, 10E8, 10E9, 1E10, 1E11))
library(cocor)
t = data.frame(diffs %>% group_by(QueryId) %>% mutate(EstNeo4j = EstSize[1], EstCascades = EstSize[2]) %>% distinct(QueryId, ResultSize, EstNeo4j, EstCascades))
cocor(~ ResultSize + EstNeo4j | ResultSize + EstCascades, t, alternative = "less", conf.level = 0.99)
neo4jDiffs = diffs %>% filter(Optimizer == "Neo4j")
neo4jCorPlot = ggplot(neo4jDiffs, aes(x = ResultSize, y = EstSize, color=Optimizer)) + geom_point() +
geom_smooth(method = lm, formula = y ~ x) +
geom_line(aes(x = ResultSize, y = ResultSize, color="Perfect optimizer"))
cascadesDiffs = diffs %>% filter(Optimizer == "Cascades")
cascadesCorPlot = ggplot(cascadesDiffs, aes(x = ResultSize, y = EstSize, color=Optimizer)) + geom_point() +
geom_smooth(method = lm, formula = y ~ x) +
geom_line(aes(x = ResultSize, y = ResultSize, color="Perfect optimizer"))
absDiff = diffs %>% group_by(QueryId) %>% mutate(OptimizerDiff = AbsError[1] - AbsError[2]) %>%
select(QueryId, OptimizerDiff) %>% distinct(QueryId, .keep_all=TRUE)
absDiffPlot = ggplot(absDiff, aes(x = factor(QueryId), OptimizerDiff)) +
geom_bar(stat="identity", position = "dodge") +
scale_y_continuous(trans = "asinh", breaks = c(0, 1E1, 1E2, 1E3, 1E4, 1E5, 10E6, 10E7, 10E8, 10E9, 1E10, 1E11))
absDiff = diffs %>% group_by(QueryId) %>% mutate(OptimizerDiff = AbsError[1] - AbsError[2]) %>%
select(QueryId, OptimizerDiff) %>% distinct(QueryId, .keep_all=TRUE)
absDiffPlot = ggplot(absDiff, aes(x = factor(QueryId), OptimizerDiff)) +
geom_bar(stat="identity", position = "dodge") +
scale_y_continuous(trans = "asinh", breaks = c(0, 1E1, 1E2, 1E3, 1E4, 1E5, 10E6, 10E7, 10E8, 10E9, 1E10, 1E11))
absDiffPlot
neo4jCorPlot
cascadesCorPlot
cascadesDiffs = diffs %>% filter(Optimizer == "Cascades")
cascadesCorPlot = ggplot(cascadesDiffs %>% filter(ResultSize < 1E9), aes(x = ResultSize, y = EstSize, color=Optimizer)) + geom_point() +
geom_smooth(method = lm, formula = y ~ x) +
geom_line(aes(x = ResultSize, y = ResultSize, color="Perfect optimizer"))
cascadesCorPlot
neo4jDiffs = diffs %>% filter(Optimizer == "Neo4j")
neo4jCorPlot = ggplot(neo4jDiffs %>% filter(ResultSize < 1E9), aes(x = ResultSize, y = EstSize, color=Optimizer)) + geom_point() +
geom_smooth(method = lm, formula = y ~ x) +
geom_line(aes(x = ResultSize, y = ResultSize, color="Perfect optimizer"))
neo4jCorPlot
absDiffPlot
neo4jDiffs = diffs %>% filter(Optimizer == "Neo4j")
neo4jCorPlot = ggplot(neo4jDiffs %>% filter(ResultSize < 1E9 || QueryId == 4), aes(x = ResultSize, y = EstSize, color=Optimizer)) + geom_point() +
geom_smooth(method = lm, formula = y ~ x) +
geom_line(aes(x = ResultSize, y = ResultSize, color="Perfect optimizer"))
neo4jCorPlot
neo4jDiffs = diffs %>% filter(Optimizer == "Neo4j")
neo4jCorPlot = ggplot(neo4jDiffs %>% filter(ResultSize < 1E9 || QueryId == 4 || QueryId == 3), aes(x = ResultSize, y = EstSize, color=Optimizer)) + geom_point() +
geom_smooth(method = lm, formula = y ~ x) +
geom_line(aes(x = ResultSize, y = ResultSize, color="Perfect optimizer"))
neo4jCorPlot
neo4jDiffs = diffs %>% filter(Optimizer == "Neo4j")
neo4jCorPlot = ggplot(neo4jDiffs %>% filter(ResultSize < 1E9 || QueryId == 4 || QueryId == 5), aes(x = ResultSize, y = EstSize, color=Optimizer)) + geom_point() +
geom_smooth(method = lm, formula = y ~ x) +
geom_line(aes(x = ResultSize, y = ResultSize, color="Perfect optimizer"))
neo4jCorPlot
absDiffPlot
neo4jDiffs = diffs %>% filter(Optimizer == "Neo4j")
neo4jCorPlot = ggplot(neo4jDiffs %>% filter(ResultSize < 1E9 || QueryId == 4 || QueryId == 2 || QueryId == 3), aes(x = ResultSize, y = EstSize, color=Optimizer)) + geom_point() +
geom_smooth(method = lm, formula = y ~ x) +
geom_line(aes(x = ResultSize, y = ResultSize, color="Perfect optimizer"))
neo4jCorPlot
neo4jDiffs = diffs %>% filter(Optimizer == "Neo4j")
neo4jCorPlot = ggplot(neo4jDiffs %>% filter(ResultSize < 1E9), aes(x = ResultSize, y = EstSize, color=Optimizer)) + geom_point() +
geom_smooth(method = lm, formula = y ~ x) +
geom_line(aes(x = ResultSize, y = ResultSize, color="Perfect optimizer"))
neo4jCorPlot
neo4jDiffs = diffs %>% filter(Optimizer == "Neo4j")
neo4jCorPlot = ggplot(neo4jDiffs, aes(x = ResultSize, y = EstSize, color=Optimizer)) + geom_point() +
geom_smooth(method = lm, formula = y ~ x) +
geom_line(aes(x = ResultSize, y = ResultSize, color="Perfect optimizer"))
neo4jCorPlot
absDiffPlot
absErrorsPlot
neo4jDiffs = diffs %>% filter(Optimizer == "Neo4j")
neo4jCorPlot = ggplot(neo4jDiffs %>% filter(QueryId == 40), aes(x = ResultSize, y = EstSize, color=Optimizer)) + geom_point() +
geom_smooth(method = lm, formula = y ~ x) +
geom_line(aes(x = ResultSize, y = ResultSize, color="Perfect optimizer"))
neo4jCorPlot
neo4jDiffs = diffs %>% filter(Optimizer == "Neo4j")
neo4jCorPlot = ggplot(neo4jDiffs %>% filter(QueryId != 40), aes(x = ResultSize, y = EstSize, color=Optimizer)) + geom_point() +
geom_smooth(method = lm, formula = y ~ x) +
geom_line(aes(x = ResultSize, y = ResultSize, color="Perfect optimizer"))
neo4jCorPlot
absErrorsPlot
mean(absDiff$OptimizerDiff)
absDiff = diffs %>% group_by(QueryId) %>% mutate(OptimizerDiff = AbsError[1] - AbsError[2]) %>%
select(QueryId, OptimizerDiff) %>% distinct(QueryId, .keep_all=TRUE)
absDiffPlot = ggplot(absDiff, aes(x = factor(QueryId), OptimizerDiff)) +
geom_bar(stat="identity", position = "dodge") +
scale_y_continuous(trans = "asinh",
breaks = c(-1E5, -1E4, -1E3, -1E2, -1E1, 0, 1E1, 1E2, 1E3, 1E4, 1E5, 10E6, 10E7, 10E8, 10E9, 1E10, 1E11, 1E12))
absDiffPlot
absDiff = diffs %>% group_by(QueryId) %>% mutate(OptimizerDiff = AbsError[1] - AbsError[2]) %>%
select(QueryId, OptimizerDiff) %>% distinct(QueryId, .keep_all=TRUE)
absDiffPlot = ggplot(absDiff, aes(x = factor(QueryId), OptimizerDiff)) +
geom_bar(stat="identity", position = "dodge") +
scale_y_continuous(trans = "asinh",
breaks = c(-1E6, -1E5, -1E4, -1E3, -1E2, -1E1, 0, 1E1, 1E2, 1E3, 1E4, 1E5, 10E6, 10E7, 10E8, 10E9, 1E10, 1E11, 1E12))
absDiffPlot
absDiffPlot
absDiff = diffs %>% group_by(QueryId) %>% mutate(OptimizerDiff = AbsError[1] - AbsError[2]) %>%
select(QueryId, OptimizerDiff) %>% distinct(QueryId, .keep_all=TRUE)
absDiffPlot = ggplot(absDiff, aes(x = factor(QueryId), OptimizerDiff)) +
geom_bar(stat="identity", position = "dodge") +
scale_y_continuous(trans = "asinh",
breaks = c(-1E6, -1E5, -1E4, -1000, -100, -10, 0, 1E1, 1E2, 1E3, 1E4, 1E5, 10E6, 10E7, 10E8, 10E9, 1E10, 1E11, 1E12))
absDiffPlot
absDiffPlot
qt(0.95, 5)
err99 = function(x) {
return(qt(0.99, df = length(x) - 1) * sd(x) / sqrt(length(x)))
}
conf = absDiff %>% group_by() %>% summarise(mean=mean(OptimizerDiff), err=err99(OptimizerDiff))
conf %>% mutate(low = mean - err, high = mean + err)
var(absDiff$OptimizerDiff)
sd(absDiff$OptimizerDiff)
sd(absDiff$OptimizerDiff) * sd(absDiff$OptimizerDiff)
qt(0.99, 43)
err99 = function(x) {
return(qt(0.99, df = 60 - 1) * sd(x) / sqrt(60))
}
conf = absDiff %>% group_by() %>% summarise(mean=mean(OptimizerDiff), err=err99(OptimizerDiff))
conf %>% mutate(low = mean - err, high = mean + err)
err99 = function(x) {
return(qt(0.99, df = 80 - 1) * sd(x) / sqrt(80))
}
conf = absDiff %>% group_by() %>% summarise(mean=mean(OptimizerDiff), err=err99(OptimizerDiff))
conf %>% mutate(low = mean - err, high = mean + err)
err99 = function(x) {
return(qt(0.99, df = 100 - 1) * sd(x) / sqrt(100))
}
conf = absDiff %>% group_by() %>% summarise(mean=mean(OptimizerDiff), err=err99(OptimizerDiff))
conf %>% mutate(low = mean - err, high = mean + err)
relDiff
length(relDiff)
dim)(relDiff
dim)(relDiff)
dim(relDiff)
length(relDiff$RelOptimizerDiff)
absDiff
relDiff
library(ggplot2)
asinh_breaks <- function(x) {
br <- function(r) {
lmin <- round(log10(r[1]))
lmax <- round(log10(r[2]))
lbreaks <- seq(lmin, lmax, by = 1)
breaks <- 10 ^ lbreaks
}
p.rng <- range(x[x > 0], na.rm = TRUE)
breaks <- br(p.rng)
if (min(x) <= 0) {breaks <- c(0, breaks)}
if (sum(x < 0) > 1) { #more negative values that expected from expanding scale that includes zero
n.rng <- -range(x[x < 0], na.rm = TRUE)
breaks <- c(breaks, -br(n.rng))
}
return(sort(breaks))
}
asinh_trans <- function(){
trans_new(name = 'asinh', transform = asinh,
inverse = sinh, breaks = asinh_breaks)
}
diffs = merge(sizes, estimations, by="QueryId") %>% select(QueryId, Optimizer, EstSize, ResultSize) %>%
mutate(AbsError = abs(ResultSize - EstSize), RelError = AbsError / abs(ResultSize)) %>% distinct()
absErrorsPlot = ggplot(diffs,
aes(x = factor(QueryId), y = AbsError, fill=Optimizer)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(trans="asinh", breaks = c(0, 1E1, 1E2, 1E3, 1E4, 1E5, 10E6, 10E7, 10E8, 10E9, 1E10, 1E11))
diffs
relErrorsPlot = ggplot(diffs %>% filter(ResultSize != 0),
aes(x = factor(QueryId), y = RelError, fill=Optimizer)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1"))
relErrorsPlot = ggplot(diffs %>% filter(ResultSize != 0),
aes(x = factor(QueryId), y = RelError, fill=Optimizer)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
relErrorsPlot
relErrorsPlot
relDiff = diffs %>% filter(ResultSize != 0) %>%
group_by(QueryId) %>%
mutate(RelOptimizerDiff = (AbsError[1] - AbsError[2]) / ResultSize) %>%
select(QueryId, RelOptimizerDiff) %>% distinct(QueryId, .keep_all=TRUE)
relDiffPlot = ggplot(relDiff, aes(x = factor(QueryId), y = RelOptimizerDiff)) +
geom_bar(stat="identity", position = "dodge")
relDiffPlot
summarise(absDiff$OptimizerDiff)
summarise(c(2,3,4))
summarise(list(2,3,4))
summary(absDiff$OptimizerDiff)
mean(absDiff$OptimizerDiff)
mean(relDiff$RelOptimizerDiff)
var(relDiff$RelOptimizerDiff)
qt(0.99, length(relDiff$RelOptimizerDiff))
length(relDiff$RelOptimizerDiff)
qt(0.99, 31)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(dplyr)
library(scales)
queries = read.csv("queries.csv", sep = "|")
kable(queries, caption="Query catalog for the SNB")
sizes = read.csv("sizes.csv", sep = "|") %>% select(QueryId, ResultSize)
estimations = read.csv("estimations.csv", sep = "|")
library(ggplot2)
asinh_breaks <- function(x) {
br <- function(r) {
lmin <- round(log10(r[1]))
lmax <- round(log10(r[2]))
lbreaks <- seq(lmin, lmax, by = 1)
breaks <- 10 ^ lbreaks
}
p.rng <- range(x[x > 0], na.rm = TRUE)
breaks <- br(p.rng)
if (min(x) <= 0) {breaks <- c(0, breaks)}
if (sum(x < 0) > 1) { #more negative values that expected from expanding scale that includes zero
n.rng <- -range(x[x < 0], na.rm = TRUE)
breaks <- c(breaks, -br(n.rng))
}
return(sort(breaks))
}
asinh_trans <- function(){
trans_new(name = 'asinh', transform = asinh,
inverse = sinh, breaks = asinh_breaks)
}
diffs = merge(sizes, estimations, by="QueryId") %>% select(QueryId, Optimizer, EstSize, ResultSize) %>%
mutate(AbsError = abs(ResultSize - EstSize), RelError = AbsError / abs(ResultSize)) %>% distinct()
absErrorsPlot = ggplot(diffs,
aes(x = factor(QueryId), y = AbsError, fill=Optimizer)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(trans="asinh", breaks = c(0, 1E1, 1E2, 1E3, 1E4, 1E5, 10E6, 10E7, 10E8, 10E9, 1E10, 1E11))
absErrorsPlot
diffs
diffs %>% select(QueryId, ResultSize, Optimizer, EstSize) %>% write.csv(file = "./sizesAndEstimations.csv")
pwd
getwd()
setwd("/home/momits/Uni/8-2017-SS/bachelor/queries/snb")
diffs %>% select(QueryId, ResultSize, Optimizer, EstSize) %>% write.csv(file = "./sizesAndEstimations.csv")
diffs %>% select(QueryId, ResultSize, Optimizer, EstSize) %>% write.csv(file = "./sizesAndEstimations.csv", row.names=FALSE)
diffs %>% select(QueryId, ResultSize, Optimizer, EstSize) %>% write.csv(file = "./sizesAndEstimations.csv", row.names=FALSE, sep="|")
diffs %>% select(QueryId, ResultSize, Optimizer, EstSize) %>% write.table(file = "./sizesAndEstimations.csv", row.names=FALSE, sep="|")
, quote = FALSE)
diffs %>% select(QueryId, ResultSize, Optimizer, EstSize) %>% write.table(file = "./sizesAndEstimations.csv", row.names=FALSE, sep="|", quote = FALSE)
