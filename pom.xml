<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>kn.uni.dbis</groupId>
    <artifactId>neo4j-concept</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>neo4j-concept</name>
    <organization>
        <name>Department of Computer and Information Science, University of Konstanz</name>
        <url>http://www.informatik.uni-konstanz.de/</url>
    </organization>
    <inceptionYear>2019</inceptionYear>



    <properties>
        <!-- Global Project Properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>12</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <uberjar.name>benchmarks</uberjar.name>
        <maven.build.timestamp.format>yyyy.MM.dd.HH.mm.ss</maven.build.timestamp.format>
        <!-- Dependency Versions -->
        <neo4j.version>3.5.0</neo4j.version>
        <junit.jupiter.version>5.3.1</junit.jupiter.version>
        <jmh.version>1.21</jmh.version>
        <!-- Less warnings for Java9 modules, see in benchmark profile
           NOTE: keep in sync with benchmark profile! -->
        <argLine>
            --illegal-access=deny
            --add-opens java.base/java.lang=ALL-UNNAMED
            --add-opens java.base/java.util=ALL-UNNAMED
            --add-opens java.base/java.io=ALL-UNNAMED
            --add-exports java.base/sun.nio.ch=ALL-UNNAMED
        </argLine>
    </properties>

    <prerequisites>
        <maven>${project.modelVersion}</maven>
    </prerequisites>

    <repositories>
        <repository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>central</id>
            <name>Official Maven2 Repository</name>
            <url>http://repo.maven.apache.org/maven2</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>central</id>
            <name>Official Maven2 Repository</name>
            <url>http://repo.maven.apache.org/maven2</url>
        </pluginRepository>
    </pluginRepositories>


    <dependencies>
        <!-- neo4j dependencies -->
        <dependency>
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j</artifactId>
            <version>${neo4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.neo4j.app</groupId>
            <artifactId>neo4j-server</artifactId>
            <version>${neo4j.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.kostaskougios</groupId>
            <artifactId>cloning</artifactId>
            <version>1.10.0</version>
        </dependency>

        <!-- Graph Algorithms and APoC -->
        <dependency>
          <groupId>org.neo4j</groupId>
          <artifactId>graph-algorithms-algo</artifactId>
          <version>${neo4j.version}.0</version>
        </dependency>
        <dependency>
          <groupId>org.neo4j</groupId>
          <artifactId>graph-algorithms-core</artifactId>
          <version>${neo4j.version}.0</version>
        </dependency>
        <dependency>
          <groupId>org.neo4j.procedure</groupId>
          <artifactId>apoc</artifactId>
          <version>3.5.0.2</version>
        </dependency>

        <dependency>
            <groupId>org.javatuples</groupId>
            <artifactId>javatuples</artifactId>
            <version>1.2</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j-io</artifactId>
            <version>${neo4j.version}</version>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j-kernel</artifactId>
            <version>${neo4j.version}</version>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>org.neo4j.test</groupId>
            <artifactId>neo4j-harness</artifactId>
            <version>${neo4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.neo4j.community</groupId>
            <artifactId>it-test-support</artifactId>
            <version>${neo4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.jupiter.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.jupiter.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
        </dependency>

        <!-- Arg parse, Logging, CheckStyle and Benchmarking -->
        <dependency>
            <groupId>com.github.oshi</groupId>
            <artifactId>oshi-core</artifactId>
            <version>3.13.0</version>
        </dependency>
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-core</artifactId>
            <version>${jmh.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-generator-annprocess</artifactId>
            <version>${jmh.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>1.7.25</version>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.argparse4j</groupId>
            <artifactId>argparse4j</artifactId>
            <version>0.8.1</version>
        </dependency>
    </dependencies>


    <build>
        <plugins>
        <!-- JUnit 5 requires Surefire version 2.22.0 or higher -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.0</version>
                <dependencies>
                    <dependency>
                        <groupId>org.ow2.asm</groupId>
                        <artifactId>asm</artifactId>
                        <version>6.2</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <systemProperties>
                        <property>
                            <name>java.util.logging.config.file</name>
                            <value>${project.build.testOutputDirectory}/logging.properties</value>
                        </property>
                    </systemProperties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <release>${java.version}</release>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.ow2.asm</groupId>
                        <artifactId>asm</artifactId>
                        <version>6.2</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <finalName>${uberjar.name}</finalName>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>org.openjdk.jmh.Main</mainClass>
                                </transformer>
                            </transformers>
                            <filters>
                                <filter>
                                    <!-- Shading signed JARs will fail without this. http://stackoverflow.com/questions/999489/invalid-signature-file-when-attempting-to-run-a-jar -->
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/bench/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-resource</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>add-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/bench/resources</directory>
                                    <!--<targetPath>resources</targetPath>-->
                                    <excludes>
                                        <!--<exclude>**/junk/**</exclude>-->
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <sourceDirectory>${project.build.sourceDirectories}</sourceDirectory>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <includeResources>false</includeResources>
                    <configLocation>checkstyle.xml</configLocation>
                    <failOnViolation>true</failOnViolation>
                    <violationSeverity>warning</violationSeverity>
                </configuration>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>checkstyle</goal>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.4</version>
                <configuration>
                    <effort>max</effort>
                    <threshold>Low</threshold>
                    <visitors>
                        <detector name="BadAppletConstructor" enabled="true" />
                        <detector name="CallToUnsupportedMethod" enabled="true" />
                        <detector name="CheckExpectedWarnings" enabled="true" />
                        <detector name="CovariantArrayAssignment" enabled="true" />
                        <detector name="EmptyZipFileEntry" enabled="true" />
                        <detector name="FindCircularDependencies" enabled="true" />
                        <detector name="InefficientIndexOf" enabled="true" />
                        <detector name="InefficientInitializationInsideLoop" enabled="true" />
                        <detector name="InefficientMemberAccess" enabled="true" />
                        <detector name="InefficientToArray" enabled="true" />
                        <detector name="PublicSemaphores" enabled="true" />
                        <detector name="UselessSubclassMethod" enabled="true" />
                    </visitors>
                    <!-- Reports all bugs (other values are medium and max) -->

                    <!-- Produces XML report -->
                    <xmlOutput>true</xmlOutput>
                </configuration>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>benchmark</id>
            <properties>
                <skipTests>true</skipTests>
                <benchmark>kn.uni.dbis.pdsp</benchmark>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>3.0.0</version>
                        <executions>
                            <execution>
                                <id>add-test-source</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/bench/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.1</version>
                        <configuration>
                            <compilerVersion>${maven.compiler.target}</compilerVersion>
                            <source>${maven.compiler.target}</source>
                            <target>${maven.compiler.target}</target>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.6.0</version>
                        <executions>
                            <execution>
                                <id>run-benchmark</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <classpathScope>test</classpathScope>
                                    <executable>${java.home}/bin/java</executable>
                                    <environmentVariables>
                                        <!-- To fix commas in jmh output (for systems with funky locale settings): JAVA_TOOL_OPTIONS=-Duser.language=en -Duser.country=US -->
                                        <JAVA_TOOL_OPTIONS>-Duser.language=en -Duser.country=US</JAVA_TOOL_OPTIONS>
                                    </environmentVariables>
                                    <arguments>
                                        <!-- Prevent chatty Java9 warnings until they are fixed. -->
                                        <!-- NOTE: Keep this block in sync with properties.argLine ! -->
                                        <!-- Deny illegal access unless we explicitly allow it below, this way we are notified about new offenders -->
                                        <argument>--illegal-access=deny</argument>
                                        <argument>--add-exports</argument>
                                        <!-- Since most offenders will not be Java9 modules, they are "unnamed" and match here -->
                                        <argument>java.base/sun.nio.ch=ALL-UNNAMED</argument>
                                        <argument>--add-opens</argument>
                                        <argument>java.base/java.lang=ALL-UNNAMED</argument>
                                        <argument>--add-opens</argument>
                                        <argument>java.base/java.util=ALL-UNNAMED</argument>
                                        <argument>--add-opens</argument>
                                        <argument>java.base/java.io=ALL-UNNAMED</argument>

                                        <!-- usual jmh stuff -->
                                        <argument>-classpath</argument>
                                        <classpath/>
                                        <argument>org.openjdk.jmh.Main</argument>
                                        <argument>-rf</argument>
                                        <argument>json</argument>
                                        <argument>-rff</argument>
                                        <argument>target/jmh-result.${benchmark}-${maven.build.timestamp}.json</argument>
                                        <argument>${benchmark}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>

            <dependencies>
                <dependency>
                    <groupId>org.openjdk.jmh</groupId>
                    <artifactId>jmh-core</artifactId>
                    <version>${jmh.version}</version>
                    <!--<scope>test</scope>-->
                </dependency>
                <dependency>
                    <groupId>org.openjdk.jmh</groupId>
                    <artifactId>jmh-generator-annprocess</artifactId>
                    <version>${jmh.version}</version>
                    <scope>provided</scope>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
